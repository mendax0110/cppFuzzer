name: Create Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure CMake
        run: >
          cmake -B ${{ github.workspace }}/build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{ github.workspace }}/build

  create_release:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [16.x]  # Specify Node.js 16
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set Release Name
        id: set_release_name
        run: echo "::set-output name=release_name::Release ${{ github.sha }}"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ${{ github.workspace }}/build

      - name: Create Release Directory
        run: mkdir -p ${{ github.workspace }}/release

      - name: Debug Build Directory
        run: |
          echo "Contents of build directory:"
          ls -la ${{ github.workspace }}/build

      - name: Copy Executables
        run: |
          rsync -av --progress ${{ github.workspace }}/build  ${{ github.workspace }}/release/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/build
          tag_name: ${{ steps.set_release_name.outputs.release_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
