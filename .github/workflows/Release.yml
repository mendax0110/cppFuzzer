name: Create Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created  # This will trigger the workflow when a new release is created

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set reusable strings
        id: strings
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_ENV"

      - name: Configure CMake
        run: |
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

  create_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set Release Name
        id: set_release_name
        run: echo "::set-output name=release_name::Release ${{ github.event.release.tag_name }}"

      - name: Create Release Directory
        run: mkdir -p ${{ github.workspace }}/release

      - name: Copy Executables
        run: |
          rsync -av --progress ${{ needs.build.outputs.build-output-dir }}/*.exe ${{ github.workspace }}/release/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*  # Include all executables from the "release" directory
          tag_name: ${{ github.event.release.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
